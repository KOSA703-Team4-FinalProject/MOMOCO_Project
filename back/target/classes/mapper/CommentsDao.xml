<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dao.CommentDao">
	<!--댓글쓰기  -->
	<insert id="addComment" parameterType="kr.or.vo.Comments">
	INSERT INTO comments_${url} (co_idx, idx, content, ref, nickname, u_idx) 
	VALUES (COMMENTS_CO_IDX_SEQ_${url}.NEXTVAL, #{idx}, '${content}', 0, '${nickname}', ${u_idx})
	</insert>
	<!--대댓글쓰기  -->
	<!-- 댓글 내용-->
	<select id="commentContent" parameterType="kr.or.vo.Comments" resultType="kr.or.vo.Comments">
	select c.co_idx ,c.idx, c.content, to_char(c.w_date ,'YYYY-MM-DD')as w_date,c.ref,c.nickname,c.u_idx, m.profilephoto 
	from comments_${url} c join member m
	on c.u_idx = m.u_idx
	</select>
	<!-- 댓글 목록 -->
	<select id="getComment" parameterType="kr.or.vo.Comments" resultType="kr.or.vo.Comments">
	select co_idx, idx, content, w_date, ref, nickName, u_idx from comments_${url} where idx=#{idx}
	</select>
	<!--대댓글만들기  -->
	<insert id="replycomment" parameterType="kr.or.vo.Comments">
	INSERT INTO comments_${url} (co_idx, idx, content, ref, nickname, u_idx) 
	VALUES (COMMENTS_CO_IDX_SEQ_${url}.NEXTVAL, #{idx}, '${content}', ${ref}, '${nickname}', ${u_idx})
	</insert>
</mapper>