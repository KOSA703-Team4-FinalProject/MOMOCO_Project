<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dao.CommonBoardDao">

	<!-- commandBoard list-->
	

	<!-- 자유게시판 전체 글 목록 -->
	<select id="getBoard" parameterType="int" resultType="kr.or.vo.CommonBoard">
	select c_idx, aaa.idx, c.u_idx as u_idx1, aaa.u_idx, title, content, w_date, b_code, label, ref, depth, step, style, aaa.nickname, profilephoto
	from (select c_idx, idx, u_idx 
	      	from checked_${url}
	      	where u_idx = #{u_idx}) c right join (select idx, aa.u_idx, title, content, w_date, b_code, label, ref, depth, step, style, m.nickname, profilephoto
	                                                from member m join (select idx, nickname, title, content, w_date, b_code, a.label, u_idx, ref, depth, step, style
	                                                                    from label_${url} l right join (select b.idx, nickname, title, content, to_char(w_date, 'YYYY-MM-DD') as w_date, b_code, label, u_idx, b_idx, ref, depth, step 
	                                                                                                    from board_${url} b join common_board_${url} c
	                                                                                                    on b.idx = c.idx
	                                                                                                    where b_code = 5) a
	                                                                    on l.label = a.label) aa
	                                                on m.u_idx = aa.u_idx) aaa
	on c.idx = aaa.idx
	order by ref desc, step
	</select>
	
   <!-- 글읽기-->
  	<select id="getBoardByIdx" parameterType="kr.or.vo.CommonBoard" resultType="kr.or.vo.CommonBoard">
		 select b.idx , b.nickname, b.title, b.content, to_char(b.w_date ,'YYYY-MM-DD')as w_date, b.b_code, b.label, b.u_idx, c.b_idx,c.ori_filename, c.save_filename, c.filetype, c.ref, c.depth,c.step, c.thumb, m.profilephoto
		from board_${url} b join common_board_${url} c
 		on b.idx = c.idx 
		join member m
 		on m.u_idx = b.u_idx
		where b.idx = #{idx}
	</select>
	
	<!-- 글쓰기 -->
	<insert id="addCommonBoard" parameterType="kr.or.vo.CommonBoard">
	INSERT ALL
	INTO board_${url} (idx, nickname, title, content, b_code, label, u_idx)
		VALUES (BOARD_IDX_SEQ_${url}.nextval, #{nickname}, #{title}, #{content}, #{b_code}, #{label}, #{u_idx})
	INTO common_board_${url} (b_idx, ori_filename, save_filename, volume, filetype, ref, depth, step, thumb, idx)
		VALUES (COMMON_BOARD_B_IDX_SEQ_${url}.nextval, #{ori_filename}, #{save_filename}, #{volume}, #{filetype}, COMMON_BOARD_B_IDX_SEQ_${url}.CURRVAL, #{depth}, #{step}, #{thumb}, BOARD_IDX_SEQ_${url}.CURRVAL)
		
	SELECT * FROM dual
	</insert>
	<!-- 글수정하기board 테이블 -->
	<update id="updateBoard" parameterType="kr.or.vo.CommonBoard">
		 UPDATE board_${url}
        SET  title = #{title}, content = #{content}, label= #{label}
        WHERE idx = #{idx}
	</update>
	<!-- 글수정하기commonboard 테이블 -->
	<update id="updateCommonBoard" parameterType="kr.or.vo.CommonBoard">
	  UPDATE common_board_${url}
        SET ori_filename = #{ori_filename},  volume = #{volume}, filetype = #{filetype}
        WHERE idx = #{idx}
	</update>
	
	<!--삭제  -->
	<delete id="deletecommonboard" parameterType="kr.or.vo.CommonBoard">
		delete from board_${url} where idx = #{idx}
	</delete>
	
	<!-- 검색-->
	<select id="commonboardSearch" parameterType="kr.or.vo.CommonBoard" resultType="kr.or.vo.CommonBoard">
    SELECT b.idx, b.nickname, b.title, b.content, to_char(b.w_date, 'YYYY-MM-DD') as w_date, b.b_code, b.label, b.u_idx, c.ori_filename, c.save_filename, c.filetype, c.ref, c.depth, c.step, c.thumb, m.profilephoto,b_idx
    FROM board_${url} b
    JOIN common_board_${url} c ON b.idx = c.idx
    JOIN member m ON m.u_idx = b.u_idx
    <if test="type != null and type == 'title_content'">
        WHERE b.title LIKE '%' || #{keyword} || '%' OR b.content LIKE '%' || #{keyword} || '%'
    </if>
    ORDER BY b.idx DESC
	</select>
	<!--알림보낼사람 선택하기-->
	<select id="boardalramlist" parameterType="kr.or.vo.CommonBoard" resultType="kr.or.vo.CommonBoard">
		select a.url , a.u_idx,b.nickname , b.profilephoto
		from WORKSPACE_USER a join member b on a.u_idx = b.u_idx 
		where a.url = '${url}'
	</select>
	<!--전체리스트 갯수-->
	<select id="listCount" resultType="int">
	select count(idx) from board_${url} where b_code =5
	</select>
	
	<!-- 답글쓰기 -->
	<insert id="replyCommonBoard" parameterType="kr.or.vo.CommonBoard">
	INSERT ALL
	INTO board_${url} (idx, nickname, title, content, b_code, label, u_idx)
		VALUES (BOARD_IDX_SEQ_${url}.nextval, '${nickname}', '${title}', '${content}', ${b_code}, '${label}', ${u_idx})
	INTO common_board_${url}(b_idx, ori_filename, save_filename, volume, filetype, ref, depth, step, thumb, idx)
		VALUES (COMMON_BOARD_B_IDX_SEQ_${url}.nextval, '${ori_filename}', '${save_filename}', ${volume}, '${filetype}', ${ref}, ${depth}, ${step}, '${thumb}', board_idx_seq_${url}.CURRVAL)
		
	SELECT * FROM dual
	</insert>

 	<!-- 글읽기 체크 -->
 	<select id="getCheck"  parameterType="int" resultType="kr.or.vo.CommonBoard">
 	
 	 select * from board_${url} a join checked_${url} b on a.idx = b.idx  join common_board_${url} c  on a.idx=c.idx
    where a.u_idx =#{u_idx}
 	ORDER BY c.b_idx DESC
 	
 	</select>
</mapper>